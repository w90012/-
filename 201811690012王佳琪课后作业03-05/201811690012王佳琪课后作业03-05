作业一：
建立数据库：create database homework_acq
; 
选择数据库：use homework_acq;
创建表，表名为acquaintance：
create table acquaintance(
friend1  char(30) not null,

firend2  char(30) not null,
 
class    char(30) not null);

用在线测试工具http://www.generatedata.com/生成测试数据，并插入数据到表格

作业二：
1. 找出互不相识的人
with t as
(select friend1 m from acquaintance

union
select friend2 from acquaintance
)

select t1.m m1, t2.m m2 
from t t1, t t2

where t1.m<>t2.m;

2. 只在一个类别出现
with t as (
select friend1 m, class from acquaintance
union 
select friend2, class from acquaintance
)
select m from t t1 where not exists(select * from t where m=t1.m and class<>t1.class);


3. 所有类别都有朋友
select friend1,friend2,class 
from acquaintance t1 
where not exists
 (select * from acquaintance t2 
where not exists
(select * from acquaintance where class=t2.class 
and ((friend1=t1.friend1 and friend2=t1.friend2) or (friend1=t1.friend2 and friend2=t1.friend1))));

4. 朋友最多的人
with t as (
select M,class,sum(cn) as ct from 
(select friend1 AS M,class,count(*) as cn from acquaintance group by friend1,class
union all
select friend2 AS M,class,count(*) as cn from acquaintance group by M,class)
as t group by M,class)
select * from t AS t1 where ct=(select max(ct) from t where t1.class=t.class)
ORDER BY class;

5. 
with t as 
(
select friend1 AS m1, friend2 AS m2, class from acquaintance group by friend1,friend2,class
union all
select friend2 AS m1, friend1 AS m2, class from acquaintance group by m1,m2,class
)
select a1.friend1, a1.friend2, a1.class
from acquaintance as a1
where exists
(select * from (
select t.m2 from t where a1.friend1=t.m1 and a1.class=t.class
) as f_f1,
(
select t.m2 from t where a1.friend2=t.m1 and a1.class=t.class
)as f_f2
where(f_f1.m2=f_f2.m2) and (f_f1.m2<>friend2) and (f_f2.m2<>friend1))
ORDER BY friend1;

6.
with 
t as 
(select friend1,friend2
from   acquaintance
union all
select friend2,friend1
from   acquaintance
),
related as
(select t1.friend1,
       t1.friend2 as media,
       t2.friend2 
from   t as t1
       inner join t as t2
         on t1.friend2 = t2.friend1
)
select media,count(*) as rlt_index
from ( select *
        from   related as rlt
        where  rlt.friend1 <> rlt.friend2
     ) a group by media		 
ORDER BY rlt_index DESC;

7.
select friend1,friend2,class from acquaintance as t1
where not exists (select * from acquaintance as t2
where not exists(
select * from acquaintance 
where class=t2.class and ((friend1=t1.friend1 and friend2=t1.friend2) or (friend1=t1.friend2 and friend2=t1.friend1))));

