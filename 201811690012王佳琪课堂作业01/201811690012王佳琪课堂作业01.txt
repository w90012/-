课堂作业
1 sqlsever
1.1 优点
1.1.1 SQLServer是一个具备完全Web支持的数据库产品，提供了对可扩展标记语言 (XML)的核心支持以及在Internet上和防火墙外进行查询的能力
1.1.2 超快的性能，快速的数据发现
1.1.3 sqlsever具有高效的数据压缩功能
1.1.4 具有集成的开发环境
1.2 缺点
1.2.1 开放性差，只能运行在windows平台
1.2.2 可伸缩性差，并行实施和共存模型并不成熟，很难处理日益增多的用户数和数据卷，伸缩性有限
1.2.3 性能稳定性差，SQLServer当用户连接多时性能会变的很差，并且不够稳定
1.2.4使用风险高，SQLServer完全重写的代码，经历了长期的测试，不断延迟，许多功能需时间来证明。并不十分兼容早期产品。使用需要冒一定风险
1.2.5 客户端支持及应用模式单一。只支持C/S模式
1.2.6 安全性差，相较获得最高认证级别的ISO标准认证的oracle，SQL Server并没有获得什么安全认证
1.3适用场景
主机操作系统为window，主要用于web网站的建设，承载中小型web后台数据。在租赁的虚拟主机中一般会预安装SQL Server作为数据库软件

2 oracle
2.1 优点
2.1.1 能在所有主流平台上运行（包括 windows）。完全支持所有的工业标准。采用完全开放策略。可以使客户选择最适合的解决方案。对开发商全力支持
2.1.2 安全性方面，性能最高
2.1.3 采用标准的SQL结构化查询语言
2.1.4 具有丰富的开发工具，覆盖开发周期的各阶段
2.1.5支持大型数据库，数据类型支持数字、字符、大至2GB的二进制数据，为数据库的面向对象存储提供数据支持
2.1.6具有字符界面和图形界面，易于开发
2.1.7 具有数据透明、网络透明，支持异种网络、异构数据库系统。并行处理采用动态数据分片技术
2.1.8 支持客户机/服务器体系结构及混合的体系结构（集中式、分布式、客户机/服务器）
2.1.9 数据安全保护措施：没有读锁，采取快照SNAP方式完全消除了分布读写冲突。自动检测死锁和冲突并解决。数据安全级别为C2级（最高级）
2.1.10 在中国的销售份额占50%以上，市场份额高
2.2 缺点
2.2.1 管理维护麻烦一些
2.2.2 数据库崩溃后回复很麻烦，因为他把很多东西放在内存里
2.2.3 数据库连接要慢些，最好用连接池
2.2.4 大对象不好用，vchar2字段太短，不够用
2.2.5 管理员的工作烦，且经验非常重要
2.2.6 对硬件的要求很高
2.2.7 价格昂贵
2.3 适用场景
大部分企事业单位，适用于服务器比较强大的单节点或者集群环境

3 mysql
3.1 优点
3.1.1 其体积小
3.1.2 开放源码
3.1.3 可运行在Windows平台和大多数的Linux平台上
3.1.4 快速，轻量级，易于扩展，免费，跨平台
3.1.5 可以同时处理几乎不限数量的用户
3.1.6 处理多达50,000,000以上的记录
3.1.7 命令执行速度快
3.1.8 简单有效的用户特权系统
3.1.9 使用C和C++编写，并使用了多种编译器进行测试，保证源代码的可移植性
3.1.10 支持AIX、FreeBSD、HP-UX、Linux、Mac OS、NovellNetware、OpenBSD、OS/2 Wrap、Solaris、Windows等多种操作系统
3.2 缺点
3.2.1 MySQL也缺乏一些存储程序的功能
3.2.2 使用缺省的ip端口，但是有时候这些ip也会被一些黑客闯入
3.2.3 使用myisam配置，如果不慎损坏数据库，可能会导致所有的数据丢失
3.3 适用场景
广泛地应用在Internet上的中小型网站中

4 sqlite
4.1 优点
4.1.1 属于轻量级的数据库。 因此在电脑，手机，相机，家用电子设备等设备的嵌入式软件是非常好的选择
4.1.2 数据存储非常简单高效
4.1.3 可以用作临时数据集，以对应用程序中的一些数据进行一些处理
4.1.4 数据查询非常简单。 您可以将数据加载到SQLite内存数据库中，并随时提取数据
4.1.5 SQLite支持很多种语言的编程接口（C/C++、Python、Java、Ruby、Perl）
4.2 缺点
4.2.1 在并发（包括多进程和多线程）读写方面的性能一直不太理想：数据库可能会被写操作独占，从而导致其它读写操作阻塞或出错
4.2.2 SQL标准支持不全
4.3 适用场景
一般用于处理小到中型数据存储